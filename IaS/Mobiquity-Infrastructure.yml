# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-template-resource-type-ref.html
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/Welcome.html
Parameters:
  VpcCidrBlock:
    Type: String
    MinLength: 9
    MaxLength: 18
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
    ConstraintDescription: Must be a valid CIDR range in the form x.x.x.x/16
    Default: 10.50.0.0/16
  Subnet1CidrBlock:
    Type: String
    MinLength: 9
    MaxLength: 18
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
    ConstraintDescription: Must be a valid CIDR range in the form x.x.x.x/16
    Default: 10.50.0.0/24
  Subnet2CidrBlock:
    Type: String
    MinLength: 9
    MaxLength: 18
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
    ConstraintDescription: Must be a valid CIDR range in the form x.x.x.x/16
    Default: 10.50.1.0/24
  EnvironmentSize:
   Type: String
   Default: SMALL
   AllowedValues:
   - SMALL
   - MEDIUM
   - LARGE
Mappings:
  RegionMap:
    us-east-2:
     "AMALINUX": "ami-710e2414"
    us-east-1:
     "AMALINUX": "ami-428aa838"
    us-west-1:
     "AMALINUX": "ami-4a787a2a"
    us-west-2:
     "AMALINUX": "ami-7f43f307"
    ap-northeast-1:
     "AMALINUX": "ami-c2680fa4"
    ap-northeast-2:
     "AMALINUX": "ami-3e04a450"
    ap-south-1:
     "AMALINUX": "ami-3b2f7954"
    ap-southeast-1:
     "AMALINUX": "ami-4f89f533"
    ap-southeast-2:
     "AMALINUX": "ami-38708c5a"
    ca-central-1:
     "AMALINUX": "ami-7549cc11"
    eu-central-1:
     "AMALINUX": "ami-1b2bb774"
    eu-west-1:
     "AMALINUX": "ami-db1688a2"
    eu-west-2:
     "AMALINUX": "ami-6d263d09"
    eu-west-3:
     "AMALINUX": "ami-5ce55321"
    sa-east-1:
     "AMALINUX": "ami-f1337e9d"
  InstanceSize:
    SMALL:
     EC2: t2.micro
    MEDIUM:
     EC2: t2.small
    LARGE:
     EC2: t2.medium
Resources:
  MobiVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCidrBlock
      EnableDnsHostnames: True
  MobiIGW:
    Type: AWS::EC2::InternetGateway
  VpcIgwAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref MobiIGW
      VpcId: !Ref MobiVPC
  MobiCustRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref MobiVPC
  RouteToInternet:
    Type: AWS::EC2::Route
    DependsOn: VpcIgwAttachment
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref MobiIGW
      RouteTableId: !Ref MobiCustRouteTable
  MobiPubicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: !Ref Subnet1CidrBlock
      AvailabilityZone: !Select [0, !GetAZs ]
      VpcId: !Ref MobiVPC
      MapPublicIpOnLaunch: True
  MobiPrivateSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: !Ref Subnet2CidrBlock
      AvailabilityZone: !Select [1, !GetAZs ]
      VpcId: !Ref MobiVPC
  SubRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref MobiPubicSubnet
      RouteTableId: !Ref MobiCustRouteTable
  MobiSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref MobiVPC
      GroupName: MobiSecurityGroup
      GroupDescription: "This Group is created for GoWebServer"
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: '80'
        ToPort: '80'
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
        FromPort: '22'
        ToPort: '22'
        CidrIp: 0.0.0.0/0
  MobiEc2Server:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !FindInMap [RegionMap, !Ref "AWS::Region", AMALINUX]
      InstanceType: !FindInMap [InstanceSize, !Ref EnvironmentSize, EC2]
      SubnetId: !Ref MobiPubicSubnet
      Tags:
      - Key: Name
        Value: GolangServer
      SecurityGroupIds:
      - !Ref MobiSecurityGroup
      KeyName: Common_key
      
